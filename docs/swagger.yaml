openapi: 3.0.0
info:
  title: LOOPy API
  description: 루피 프로젝트 백엔드 API 문서입니다.
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: 로컬 개발 서버

paths:
  /health:
    get:
      summary: 헬스 체크
      description: 서버가 정상 작동 중인지 확인하기 위한 API
      tags:
        - Health
      responses:
        "200":
          description: 서버 작동 정상
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    type: string
                    example: 루피 백엔드 작동 중!


  /api/v1/cafe/{cafeId}:
    get:
      summary: 카페 상세 조회
      description: 특정 카페의 상세 정보를 조회합니다
      tags:
        - Cafes
      parameters:
        - name: cafeId
          in: path
          required: true
          description: 조회할 카페의 ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: 카페 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    $ref: "#/components/schemas/CafeDetail"
        "400":
          description: 잘못된 요청 - 카페 ID 누락
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: 리소스를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/cafe/{cafeId}/coupon:
    get:
      summary: 카페 쿠폰 목록 조회
      description: 특정 카페에서 사용 가능한 쿠폰 목록을 조회합니다. 쿠폰이 없는 경우 빈 배열을 반환합니다.
      tags:
        - Cafes
      parameters:
        - name: cafeId
          in: path
          required: true
          description: 조회할 카페의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 쿠폰 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    type: array
                    items:
                      $ref: '#/components/schemas/CouponTemplate'

    post:
      summary: 카페 쿠폰 발급
      description: 특정 카페의 쿠폰 템플릿을 사용하여 사용자에게 쿠폰을 발급합니다.
      tags:
        - Cafes
      parameters:
        - name: cafeId
          in: path
          required: true
          description: 쿠폰을 발급할 카페의 ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponIssueRequest'
      responses:
        '200':
          description: 쿠폰 발급 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    $ref: '#/components/schemas/IssuedCoupon'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/cafe/{cafeId}/stamp:
    get:
      summary: 카페 스탬프 정보 조회
      description: 특정 카페의 스탬프 적립 현황을 조회합니다. 스탬프 정보가 없는 경우 빈 객체를 반환합니다.
      tags:
        - Cafes
      parameters:
        - name: cafeId
          in: path
          required: true
          description: 조회할 카페의 ID
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: 스탬프 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    $ref: '#/components/schemas/StampInfo'

  /api/v1/cafe/{cafeId}/review:
    get:
      summary: 카페 리뷰 목록 조회
      description: 특정 카페의 리뷰 목록을 페이지네이션으로 5개씩 조회합니다. cursor 파라미터를 통해 다음 페이지를 요청할 수 있습니다.
      tags:
        - Cafes
      parameters:
        - name: cafeId
          in: path
          required: true
          description: 조회할 카페의 ID
          schema:
            type: integer
            example: 1
        - name: cursor
          in: query
          required: false
          description: 페이지네이션을 위한 커서 (다음 페이지 요청시 사용)
          schema:
            type: string
            example: "10"
      responses:
        '200':
          description: 리뷰 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    example: SUCCESS
                  error:
                    type: "null"
                    example: null
                  success:
                    $ref: '#/components/schemas/ReviewListResponse'

components:
  schemas:
    CafeDetail:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "로스터리 카페"
        address:
          type: string
          example: "서울시 강남구 테헤란로 123"
        region:
          type: string
          example: "강남구"
        businessHours:
          type: string
          example: "평일 07:00-22:00, 주말 08:00-23:00"
        phone:
          type: string
          example: "02-1234-5678"
        websiteUrl:
          type: string
          example: "https://roastery-cafe.com"
        description:
          type: string
          example: "신선한 원두를 직접 로스팅하는 스페셜티 커피 전문점입니다."
        storeFilters:
          $ref: "#/components/schemas/StoreFilters"
        takeOutFilters:
          $ref: "#/components/schemas/TakeOutFilters"
        menuFilters:
          $ref: "#/components/schemas/MenuFilters"
        keywords:
          type: array
          items:
            type: string
          example: ["커피", "로스팅", "스페셜티", "조용한"]
        photos:
          type: array
          items:
            $ref: "#/components/schemas/CafePhoto"
        menu:
          type: array
          items:
            $ref: "#/components/schemas/MenuItem"

    StoreFilters:
      type: object
      properties:
        "1인석":
          type: boolean
          example: true
        "단체석":
          type: boolean
          example: false
        "노트북석":
          type: boolean
          example: true
        "애견 동반":
          type: boolean
          example: false
        "예약 가능":
          type: boolean
          example: false
        "주차 가능":
          type: boolean
          example: true
        "24시간 운영":
          type: boolean
          example: false
        "와이파이 제공":
          type: boolean
          example: true

    TakeOutFilters:
      type: object
      properties:
        "포장 할인":
          type: boolean
          example: false
        "텀블러 할인":
          type: boolean
          example: true

    MenuFilters:
      type: object
      properties:
        "비건":
          type: boolean
          example: false
        "디카페인":
          type: boolean
          example: true
        "글루텐프리":
          type: boolean
          example: true
        "저당/무카당":
          type: boolean
          example: true

    CafePhoto:
      type: object
      properties:
        id:
          type: string
          example: "1"
        url:
          type: string
          example: "https://example.com/photos/roastery-exterior.jpg"
        displayOrder:
          type: integer
          example: 1

    MenuItem:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "시그니처 아메리카노"
        price:
          type: integer
          example: 4500
        description:
          type: string
          example: "하우스 블렌드 원두로 추출한 깔끔한 아메리카노"
        imgUrl:
          type: string
          example: "https://example.com/menu/signature-americano.jpg"
        isSoldOut:
          type: boolean
          example: false

    CouponTemplate:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "시그니처 아메리카노 무료"
        validDays:
          type: integer
          description: 쿠폰 유효 기간 (일)
          example: 30
        discountType:
          type: string
          enum: [fixed, percentage]
          description: 할인 타입 (fixed: 정액 할인, percentage: 퍼센트 할인)
          example: "fixed"
        discountValue:
          type: integer
          description: 할인 값 (정액할인시 원, 퍼센트할인시 %)
          example: 4500
        applicableMenu:
          type: string
          nullable: true
          description: 적용 가능한 메뉴 (null이면 전체 메뉴)
          example: null
        expiredAt:
          type: string
          format: date-time
          description: 쿠폰 템플릿 만료 일시
          example: "2025-12-31T23:59:59.000Z"

    CouponIssueRequest:
      type: object
      required:
        - id
        - name
        - validDays
        - discountType
        - discountValue
        - expiredAt
      properties:
        id:
          type: string
          example: "5"
        name:
          type: string
          example: "디저트 무료 쿠폰"
        validDays:
          type: integer
          example: 60
        discountType:
          type: string
          enum: [fixed, percentage]
          example: "fixed"
        discountValue:
          type: integer
          example: 6500
        applicableMenu:
          type: string
          nullable: true
          example: null
        expiredAt:
          type: string
          format: date-time
          example: "2026-02-28T23:59:59.000Z"

    IssuedCoupon:
      type: object
      properties:
        id:
          type: string
          example: "10"
        expiredAt:
          type: string
          format: date-time
          example: "2025-09-18T15:54:02.939Z"
        acquisitionType:
          type: string
          example: "promotion"
        couponTemplate:
          $ref: '#/components/schemas/CouponTemplate'
        couponTemplateId:
          type: string
          example: "5"

    StampInfo:
      type: object
      properties:
        id:
          type: string
          example: "1"
        currentCount:
          type: integer
          description: 현재 적립된 스탬프 개수
          example: 3
        goalCount:
          type: integer
          description: 목표 스탬프 개수
          example: 10
        expiresAt:
          type: string
          format: date-time
          description: 스탬프 만료 일시
          example: "2025-12-31T23:59:59.000Z"

    ReviewListResponse:
      type: object
      properties:
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'
        nextCursor:
          type: string
          nullable: true
          description: 다음 페이지를 위한 커서 (마지막 페이지인 경우 null)
          example: "10"
        hasNextPage:
          type: boolean
          description: 다음 페이지 존재 여부
          example: true

    Review:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "로스터리 커피 맛집!"
        content:
          type: string
          example: "원두를 직접 로스팅해서 향이 정말 좋아요. 전문가가 추천하는 원두도 살 수 있어서 좋습니다."
        nickname:
          type: string
          example: "커피러버"
        createdAt:
          type: string
          format: date-time
          example: "2025-07-19T10:30:00.000Z"
        images:
          type: array
          items:
            type: string
          description: 리뷰 이미지 URL 목록
          example: 
            - "https://example.com/review1-1.jpg"
            - "https://example.com/review1-2.jpg"

    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
          enum: [C001, C005, C006]
        reason:
          type: string
        data:
          type: "null"
          example: null