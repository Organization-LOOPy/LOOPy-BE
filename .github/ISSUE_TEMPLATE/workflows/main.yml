name: Deploy LOOPy-BE to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host loopy-server
            HostName ${{ secrets.EC2_HOST }}
            User ubuntu
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END

      - name: Update code and deploy
        run: |
          ssh loopy-server '
          cd /opt/loopy-be

          echo "Pulling latest code..."
          git pull origin main

          echo "Killing any process using port 3000..."
          fuser -k 3000/tcp || true

          echo "Stopping and removing old container..."
          docker stop loopy-app || true
          docker rm loopy-app || true

          echo "Removing old image..."
          docker rmi loopy-be || true

          echo "Cleaning up unused Docker resources..."
          docker container prune -f
          docker volume prune -f
          docker network prune -f

          echo "Cleaning up Docker build cache..."
          docker builder prune -f  

          echo "Building new image (no cache)..."
          docker build --no-cache -t loopy-be .

          echo "Starting new container..."
          docker run -d -p 3000:3000 --name loopy-app --env-file .env loopy-be

          echo "Waiting for container to start..."
          sleep 15

          echo "Running Prisma migration..."
          docker exec loopy-app npx prisma migrate deploy

          echo "Generating Prisma client..."
          docker exec loopy-app npx prisma generate

          echo "Checking container status..."
          docker ps

          echo "Checking recent logs..."
          docker logs loopy-app --tail=20
          '

      - name: Health Check
        run: |
          ssh loopy-server '
            echo "Starting health check..."
            
            for i in {1..6}; do
              if [ "$(docker inspect --format='{{.State.Health.Status}}' loopy-app)" = "healthy" ]; then
                echo "Container is healthy!"
                exit 0
              fi
              echo "Health check retry... ($i/6)"
              sleep 10
            done
            exit 1
          '

      - name: Deployment Summary
        if: always()
        run: |
          echo "Deployment Summary"
          echo "- Project: LOOPy-BE"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Server: ${{ secrets.EC2_HOST }}"
          echo "- Time: $(date '+%Y-%m-%d %H:%M:%S')"
